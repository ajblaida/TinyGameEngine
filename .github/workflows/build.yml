name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Restore dependencies
      run: dotnet restore TinyGameEngine.Packages.sln
    
    - name: Build
      run: dotnet build TinyGameEngine.Packages.sln --no-restore --configuration Release
    
    - name: Test
      run: dotnet test TinyGameEngine.Packages.sln --no-build --configuration Release --verbosity normal
    
    - name: Pack Core Package
      run: dotnet pack src/TinyGameEngine.Core/TinyGameEngine.Core.csproj --no-build --configuration Release --output ./packages
    
    - name: Pack Reference Implementation
      run: dotnet pack src/TinyGameEngine.ReferenceImpl/TinyGameEngine.ReferenceImpl.csproj --no-build --configuration Release --output ./packages
    
    - name: Upload packages
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: ./packages/*.nupkg

  docker:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: docker build -t tinygameengine:${{ github.sha }} .
    
    - name: Test Docker image
      run: |
        docker run -d -p 8080:8080 --name test-container tinygameengine:${{ github.sha }}
        sleep 10
        curl -f http://localhost:8080/health || exit 1
        docker stop test-container

  publish:
    runs-on: ubuntu-latest
    needs: [build, docker]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    
    - name: Download packages
      uses: actions/download-artifact@v4
      with:
        name: nuget-packages
        path: ./packages
    
    - name: Publish to NuGet
      run: |
        dotnet nuget push ./packages/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json \
          --skip-duplicate
      if: env.NUGET_API_KEY != ''
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
